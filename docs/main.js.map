{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home/home.component.ts","./src/app/home/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/models/user-saved-details.ts","./src/app/models/user.ts","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/services/auth-provider.service.ts","./src/app/services/auth.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuE;AACZ;AACmB;AACrB;AAChB;AACc;;;AAGvD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAC;IACtC,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,0FAAqB,EAAC;IACrD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,uEAAa,EAAE,WAAW,EAAE,CAAC,mFAAmB,CAAC,EAAC;CAG9E,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,eAAe,CAAC;KACzB;;wEAFY,YAAY;4FAAZ,YAAY;QCLzB,2EAA+B;;6FDKlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACL;AACI;AACjB;AAEe;AACT;AACgC;AAC1B;AACI;AACE;AACF;AACqB;AACZ;AACO;AACpB;AACA;AACE;AACA;AACa;AACN;;AAqCvD,MAAM,SAAS;;wFAAT,SAAS,cAHhB,2DAAY;4IAGL,SAAS,mBAXR;QACT,0EAAgB;QAChB,kEAAW;QACX,4EAAgB;QAChB,qEAAa;QACb,qEAAa;KACd,YAvBQ;YACN,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,2DAAW;YACX,oEAAa;YACb,0EAAgB;YAChB,wEAAe;YACf,mEAAmB;YACnB,qEAAS;YACT,qEAAa;YACb,qEAAa;YACb,uEAAc;YACd,qEAAa;YACb,oFAAoB;YACpB,8EAAiB;SACnB;mIAYS,SAAS,mBAjChB,2DAAY;QACZ,sEAAc;QACd,2FAAqB;QACrB,uEAAa,aAGb,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,2DAAW;QACX,oEAAa;QACb,0EAAgB;QAChB,wEAAe;QACf,mEAAmB;QACnB,qEAAS;QACT,qEAAa;QACb,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,oFAAoB;QACpB,8EAAiB;6FAaV,SAAS;cAnCrB,sDAAQ;eAAC;gBACP,YAAY,EAAE;oBACX,2DAAY;oBACZ,sEAAc;oBACd,2FAAqB;oBACrB,uEAAa;iBACf;gBACD,OAAO,EAAE;oBACN,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,2DAAW;oBACX,oEAAa;oBACb,0EAAgB;oBAChB,wEAAe;oBACf,mEAAmB;oBACnB,qEAAS;oBACT,qEAAa;oBACb,qEAAa;oBACb,uEAAc;oBACd,qEAAa;oBACb,oFAAoB;oBACpB,8EAAiB;iBACnB;gBACD,SAAS,EAAE;oBACT,0EAAgB;oBAChB,kEAAW;oBACX,4EAAgB;oBAChB,qEAAa;oBACb,qEAAa;iBACd;gBACD,SAAS,EAAE;oBACR,2DAAY;iBACd;aACH;;;;;;;;;;;;;;ACvDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgF;AACT;AACV;AACZ;;;;;;;;;;;;ICuB3C,yEAAuD;IAAA,gEAAI;IAAA,4DAAK;;;IAChE,yEAAwC;IAAA,uDAAe;IAAA,4DAAK;;;IAApB,0DAAe;IAAf,0FAAe;;;IAIvD,yEAAuD;IAAA,iEAAK;IAAA,4DAAK;;;IACjE,yEAAwC;IAAA,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,4FAAiB;;;IAIzD,yEAAuD;IAAA,gEAAI;IAAA,4DAAK;;;IAChE,yEAAwC;IAAA,uDAAgB;IAAA,4DAAK;;;IAArB,0DAAgB;IAAhB,2FAAgB;;;IAIxD,yEAAuD;IAAA,mEAAO;IAAA,4DAAK;;;IACnE,yEAAwC;IAAA,uDAAmB;IAAA,4DAAK;;;IAAxB,0DAAmB;IAAnB,8FAAmB;;;IAI3D,yEAAuD;IAAA,mEAAO;IAAA,4DAAK;;;IACnE,yEAAwC;IAAA,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;IAI1D,yEAAuD;IAAA,qEAAS;IAAA,4DAAK;;;IACrE,yEAAwC;IAAA,uDAAoB;IAAA,4DAAK;;;IAAzB,0DAAoB;IAApB,+FAAoB;;;IAG9D,oEAA4D;;;IAC5D,oEAAkE;;;IAlCtE,0EACE;IAAA,4EAEE;IAAA,4EACE;IAAA,+GAAuD;IACvD,+GAAwC;IAC1C,qEAAe;IAEf,4EACE;IAAA,+GAAuD;IACvD,+GAAwC;IAC1C,qEAAe;IAEf,4EACE;IAAA,+GAAuD;IACvD,iHAAwC;IAC1C,qEAAe;IAEf,6EACE;IAAA,iHAAuD;IACvD,iHAAwC;IAC1C,qEAAe;IAEf,6EACE;IAAA,iHAAuD;IACvD,iHAAwC;IAC1C,qEAAe;IAEf,6EACE;IAAA,iHAAuD;IACvD,iHAAwC;IAC1C,qEAAe;IAEf,iHAAuD;IACvD,iHAA6D;IAC/D,4DAAQ;IACV,4DAAM;;;IAnCa,0DAAyB;IAAzB,yFAAyB;IAgCrB,2DAAmC;IAAnC,oGAAmC;IAC1C,0DAAgD;IAAhD,qGAAgD;;;IAIhE,0EACE;IAAA,oEAAG;IAAA,uDAAiB;IAAA,4DAAI;IAC1B,4DAAM;;;IADD,0DAAiB;IAAjB,gFAAiB;;;ADlDf,MAAM,aAAa;IAOxB,YAAmB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QANnE,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAG1E,YAAO,GAAG,KAAK,CAAC;QAIrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,iEAAmB,CAAC,CAAC;QACpD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,iEAAmB,CAAC,CAAC;IAC/D,CAAC;IAED,QAAQ;QACL,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC5E,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;;0EAnBU,aAAa;6FAAb,aAAa;wEAKb,8DAAO;;;;;QCjBpB,yEACE;QACA,yEACE;QAAA,uEACE;QAAA,oEACF;QAAA,4DAAI;QACN,4DAAM;QAEN,yEACE;QAAA,4EACE;QAAA,oEACF;QAAA,4DAAS;QAET,oFACE;QAAA,4EAA6C;QAAvB,qIAAW,cAAU,IAAC;QAAC,mEAAO;QAAA,4DAAS;QAC/D,4DAAW;QAEb,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,wFAAwC;QAAtB,8LAAqB;QAAC,oEAAQ;QAAA,4DAAmB;QACrE,4DAAM;QAEN,6GACE;QAqCF,4GACE;;;QA3DK,0DAAwB;QAAxB,6IAAwB;QAM4B,0DAA6B;QAA7B,qFAA6B;QAWpE,0DAAqB;QAArB,gFAAqB;QAGjB,0DAAgB;QAAhB,8EAAgB;QAsChB,0DAAe;QAAf,6EAAe;;6FDjD1B,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;kBAME,uDAAS;mBAAC,8DAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;;;;;;;;;;;;;AEjBpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkE;AAC1B;AACU;AACwC;;;;;;;;;;ICYlF,+EACyF;IAAA,kEAAO;IAAA,4DAAW;;;IAU3G,+EACgG;IAAA,kEAAO;IAAA,4DAAW;;ADfnH,MAAM,cAAc;IAKzB,YAAoB,WAAwB,EAAU,WAAwB,EAAS,MAAc;QAAjF,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAH9F,gBAAW,GAAG,EAAE,CAAC;QAKxB,cAAS,GAAS,IAAI,iDAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAFsE,CAAC;IAI1G,KAAK;QACP;;;kBAGU;QACJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5B,uFAAuF;QACvF,yGAAyG;QACzG,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;YAC5F,IAAI,CAAC,IAAI,GAAG,IAAI,2EAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACzF,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACrD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;YAC5D,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YAEjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC;SAC9E;aAEI;YACH,IAAI,CAAC,WAAW,GAAG,qBAAqB,CAAC;SAC1C;IAEL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAE/D,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;SAElC;IAGJ,CAAC;;4EA9CU,cAAc;8FAAd,cAAc;QCZ3B,yEAEE;QAAA,0EAEI;QAF0C,sIAAY,WAAO,IAAC;QAE9D,yEACE;QAAA,oEACF;QAAA,4DAAM;QAEN,yEACE;QAAA,yEACE;QAAA,8EAA8C;QAAA,gEAAK;QAAA,4DAAW;QAChE,4DAAM;QACN,2EAGA;QAFwB,uJAAyB,EAAE,IAAC;QADpD,4DAGA;QAAA,oHACyF;QAE3F,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,gFAA6C;QAAA,gEAAI;QAAA,4DAAW;QAC9D,4DAAM;QACN,iFAEA;QADmD,wJAAyB,EAAE,IAAC;QAD/E,4DAEA;QAAA,uHACgG;QAClG,4DAAM;QAEN,2EACE;QAAA,qEAAG;QAAA,wDAAe;QAAA,4DAAI;QACxB,4DAAM;QAEN,uEACE;QAAA,yEAA2B;QAAA,0FAA8B;QAAA,4DAAI;QAC/D,4DAAM;QAEN,2EACE;QAAA,8EAAwF;QAAA,iEAAK;QAAA,4DAAS;QAGxG,4DAAM;QAEV,4DAAO;QAET,4DAAM;;QA5C+D,0DAAuB;QAAvB,oFAAuB;QAcpF,0DAAwF;QAAxF,gJAAwF;QAWvF,0DAA8F;QAA9F,sJAA8F;QAI5F,0DAAe;QAAf,gFAAe;QAQsC,0DAA8B;QAA9B,2FAA8B;;6FD3BjF,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEXD;AAAA;AAAO,MAAM,gBAAgB;IAC3B,YAAY,KAAK,EAAE,QAAQ;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;CAGF;;;;;;;;;;;;;ACPD;AAAA;AAAO,MAAM,IAAI;IAEf,YAAY,KAAK,EAAE,QAAQ;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;CAIF;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;;;;;;ICe5D,+EACuG;IAAA,kEAAO;IAAA,4DAAW;;;IAoBzH,+EAC8I;IAAA,kEAAO;IAAA,4DAAW;;;IAahK,+EAA+G;IAAA,gEAAK;IAAA,4DAAW;;;IAC/H,+EAA4G;IAAA,gEAAK;IAAA,4DAAW;;;IAK5H,+EAA0K;IAAA,gEAAK;IAAA,4DAAW;;;IAC1L,+EAAqK;IAAA,gEAAK;IAAA,4DAAW;;;IAKrL,+EAA0K;IAAA,gEAAK;IAAA,4DAAW;;;IAC1L,+EAAqK;IAAA,gEAAK;IAAA,4DAAW;;;IAKrL,+EAA2K;IAAA,gEAAK;IAAA,4DAAW;;;IAC3L,+EAAsK;IAAA,gEAAK;IAAA,4DAAW;;;IAKtL,+EAA4K;IAAA,gEAAK;IAAA,4DAAW;;;IAC5L,+EAAuK;IAAA,gEAAK;IAAA,4DAAW;;;IA1BzL,wEACE;IAAA,2IAA+G;IAC/G,2IAA4G;IAC1G,mFACJ;IAAA,4DAAI;IAEJ,wEACE;IAAA,2IAA0K;IAC1K,2IAAqK;IACnK,+EACJ;IAAA,4DAAI;IAEJ,wEACE;IAAA,2IAA0K;IAC1K,6IAAqK;IACnK,gFACJ;IAAA,4DAAI;IAEJ,yEACE;IAAA,6IAA2K;IAC3K,6IAAsK;IACpK,4EACJ;IAAA,4DAAI;IAEJ,yEACE;IAAA,6IAA4K;IAC5K,6IAAuK;IACrK,kFACJ;IAAA,4DAAI;;;IA3BQ,0DAAwD;IAAxD,oHAAwD;IACxD,0DAAuD;IAAvD,mHAAuD;IAKvD,0DAAmH;IAAnH,iLAAmH;IACnH,0DAAgH;IAAhH,8KAAgH;IAKhH,0DAAmH;IAAnH,iLAAmH;IACnH,0DAAgH;IAAhH,8KAAgH;IAKhH,0DAAoH;IAApH,kLAAoH;IACpH,0DAAiH;IAAjH,+KAAiH;IAKjH,0DAAqH;IAArH,mLAAqH;IACrH,0DAAkH;IAAlH,gLAAkH;;;ADlE7H,MAAM,qBAAqB;IAEhC,YAAoB,WAAwB,EACxB,WAAwB,EACxB,MAAc,EACtB,MAAwB,EAChB,QAAqB;QAJrB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAEd,aAAQ,GAAR,QAAQ,CAAa;QAE3B,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC;QAC3B,MAAM,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC3B,CAAC;IAEd,QAAQ;QACN,sCAAsC;QACtC,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE;YAC/B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAClG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,2BAA2B,EAAE,SAAS,EAAE;gBACzD,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC;SAC1E;IACH,CAAC;IAED,aAAa,CAAC,MAAM,EAAE,MAAM;QAC1B;;;;;YAKI;QAEJ,OAAO,CAAC,SAAoB,EAAE,EAAE;YAC9B,MAAM,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,MAAM,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAExC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;gBAC7C,OAAO;aACR;YAED,IAAK,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,EAAG;gBAC/B,IAAI,CAAC,SAAS,CAAC,EAAC,aAAa,EAAE,IAAI,EAAC,CAAC,CAAC;aACvC;iBACI;gBACH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACtB;QAEH,CAAC,CAAC;IACJ,CAAC;IAED,wBAAwB,CAAC,OAAkB;QACzC,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC3C,MAAM,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACpD,+DAA+D;QAC/D,mDAAmD;QACnD,MAAM,KAAK,GAAG,IAAI,CAAC;QACnB,MAAM,YAAY,GAAG,EAAC,QAAQ,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC,UAAU,EAAC,CAAC;QAE5G,IAAI,SAAS,IAAI,QAAQ,IAAI,QAAQ,IAAI,UAAU,EAAE;YACnD,OAAO,IAAI,CAAC;SACb;aACI;YACH,OAAO,YAAY,CAAC;SACrB;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC7C,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,wBAAwB,CAAC,CAAC;YAC7F,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAAC,EAChE,EAAE,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,WAAW,CAAC,EAAE,CAC3D,CAAC;IACJ,CAAC;;0FA1EU,qBAAqB;qGAArB,qBAAqB;QCZlC,yEAEE;QAAA,0EAEI;QAF0C,6IAAY,cAAU,IAAC;QAEjE,yEACE;QAAA,oEACF;QAAA,4DAAM;QAON,yEACE;QAAA,yEACE;QAAA,8EAA8C;QAAA,gEAAK;QAAA,4DAAW;QAChE,4DAAM;QACN,sEACA;QAAA,2HACuG;QAEzG,4DAAM;QAIN,0EACE;QAAA,0EACE;QAAA,gFAA6C;QAAA,gEAAI;QAAA,4DAAW;QAC9D,4DAAM;QACN,wEACA;QAAA,gFAC6B;QAAA,gEAAI;QAAA,4DAAW;QAC9C,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,gFAA6C;QAAA,gEAAI;QAAA,4DAAW;QAC9D,4DAAM;QACN,wEACA;QAAA,8HAC8I;QAChJ,4DAAM;QAEN,uEACE;QAAA,8EAA8D;QAAA,kEAAM;QAAA,4DAAS;QAC7E,8EAA+F;QAAA,oEAAQ;QAAA,4DAAS;QAElH,4DAAM;QAEV,4DAAO;QAEP,gNACI;QA+BN,4DAAM;;;QAjFkE,0DAA8B;QAA9B,2FAA8B;QAiB9F,0DAAsG;QAAtG,8JAAsG;QAW5D,0DAAwI;QAAxI,8OAAwI;QAUlL,0DAA6I;QAA7I,oMAA6I;QAKrF,0DAAqC;QAArC,kGAAqC;;6FDjCxF,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAA2C;;;AAKpC,MAAM,mBAAmB;IAEhC,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,WAAW,CAAE,KAA6B,EAAE,KAA0B;QACpE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAC7D,MAAM,IAAI,GAAqB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAE/E,IAAI,IAAI,EAAE;YACR,OAAO,IAAI,CAAC;SACb;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,EAAC,WAAW,EAAE,EAAC,SAAS,EAAE,KAAK,CAAC,GAAG,EAAC,EAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC,CAAC;QAC9I,OAAO,KAAK,CAAC;IACf,CAAC;;sFAdY,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAwC;AACG;;;AAMpC,MAAM,WAAW;IAIxB,YAAoB,QAAqB;QAArB,aAAQ,GAAR,QAAQ,CAAa;QAFhC,oBAAe,GAAG,EAAE,CAAC;QAG5B,IAAI,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;YAC/C,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SACxD;aACI;YACH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;SACvE;IACF,CAAC;IAED,OAAO,CAAC,KAAK,EAAE,QAAQ;QACrB,MAAM,OAAO,GAAS,IAAI,iDAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAClC,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,YAAY,CAAC,KAAK,EAAE,QAAQ;QAC3B,sCAAsC;QACrC,MAAM,OAAO,GAAS,IAAI,iDAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAChD,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE;YAEvC,IAAI,IAAI,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,CAAC,QAAQ,EAAE;gBACvE,OAAO,IAAI,CAAC;aACZ;QACJ,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAG;YACd,OAAO,IAAI,CAAC;SACb;aACI;YACH,OAAO,KAAK,CAAC;SACd;IACF,CAAC;IAED,UAAU;QACR,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,EAAE,SAAS,EAAE;YACzD,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACJ,CAAC;;sEAzCW,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;;;;;;;;;ACND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AuthProviderService } from './services/auth-provider.service';\nimport { HomeComponent } from './home/home/home.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { LoginComponent } from './login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent},\n  { path: 'register', component: RegistrationComponent},\n  { path: 'home', component: HomeComponent, canActivate: [AuthProviderService]}\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'adcuratio-app';\n}\n","\n\n<router-outlet></router-outlet>\n","import { HomeComponent } from './home/home/home.component';\nimport { AuthService } from './services/auth.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbTooltipConfig, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatTableModule} from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      LoginComponent,\n      RegistrationComponent,\n      HomeComponent\n   ],\n   imports: [\n      BrowserModule,\n      AppRoutingModule,\n      BrowserAnimationsModule,\n      FormsModule,\n      MatIconModule,\n      MatTooltipModule,\n      MatButtonModule,\n      ReactiveFormsModule,\n      NgbModule,\n      MatTabsModule,\n      MatMenuModule,\n      MatTableModule,\n      MatSortModule,\n      MatSlideToggleModule,\n      MatSnackBarModule\n   ],\n   providers: [\n     MatTooltipModule,\n     AuthService,\n     NgbTooltipConfig,\n     MatMenuModule,\n     MatSortModule\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport * as dataSourceJson from '../../../assets/data/sampleData.json';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  displayedColumns: string[] = ['id', 'name', 'age', 'gender', 'email', 'phoneNo'];\n  public dataSource;\n  public dataJson;\n  public rawData = false;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(public router: Router, private authService: AuthService) {\n    this.dataJson = JSON.stringify(dataSourceJson.data);\n    this.dataSource = new MatTableDataSource(dataSourceJson.data);\n   }\n\n   onLogOut() {\n      this.authService.logoutUser();\n      this.router.navigate(['/']).catch(() => console.log('An error occured'));\n   }\n\n  ngOnInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","<nav class=\"navbar-expand-lg nav-header \" style=\" height: 60px; background-color: #3f51b5;\">\n  <!-- <a class=\"navbar-brand\" href=\"#\">Navbar</a> -->\n  <div class=\"navbar-logo\">\n    <a [routerLink]=\"['/home']\">\n      <img src=\"./../assets/images/logo-navbar.png\">\n    </a>\n  </div>\n\n  <div class=\"navbar-profile\">\n    <button mat-icon-button class=\"navbarRoundImageButton\" [mat-menu-trigger-for]=\"menu\">\n      <img src=\"./../assets/images/person.jpg\" class=\"navbarRoundImage\">\n    </button>\n\n    <mat-menu #menu=\"matMenu\" >\n      <button mat-menu-item (click) = \"onLogOut()\">Log Out</button>\n    </mat-menu>\n\n  </div>\n</nav>\n<div class=\"home-padding-left-right-top\" >\n  <mat-slide-toggle [(ngModel)]=\"rawData\">Raw Data</mat-slide-toggle>\n</div>\n\n<div class=\"home-table\" *ngIf=\"!rawData\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"age\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Age </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.age}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"gender\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Gender </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.gender}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> E-Mail </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"phoneNo\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Phone No </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.phoneNo}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n\n<div class=\"home-table\" *ngIf=\"rawData\">\n  <p>{{this.dataJson}}</p>\n</div>\n","import { UserSavedDetails } from './../models/user-saved-details';\nimport { User } from './../models/user';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ReactiveFormsModule  } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public failMessage = '';\n  loginForm: FormGroup;\n  public data: UserSavedDetails;\n  constructor(private formBuilder: FormBuilder, private authService: AuthService, public router: Router) { }\n\n  userModel: User = new User('', '');\n\n  login(): void{\n/*     if (this.loginForm.valid)\n      {\n        console.log(this.loginForm);\n      } */\n      console.log(this.loginForm);\n      // this.authService.newUser(this.loginForm.value.email, this.loginForm.value.password);\n      // console.log(this.authService.validateUser(this.loginForm.value.email, this.loginForm.value.password));\n      if (this.authService.validateUser(this.loginForm.value.email, this.loginForm.value.password)) {\n        this.data = new UserSavedDetails(this.loginForm.value.email, this.loginForm.value.email);\n        const myData = JSON.parse(JSON.stringify(this.data));\n        console.log(this.data);\n        console.log(myData);\n        localStorage.setItem('currentUser', JSON.stringify(myData));\n        console.log(localStorage.getItem('currentUser'));\n\n        this.router.navigate(['/home']).catch(() => console.log('An error occured'));\n      }\n\n      else {\n        this.failMessage = 'Invalid Credentials';\n      }\n\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(9)]],\n\n    });\n\n    if (!localStorage.getItem('users')) {\n\n     }\n\n\n  }\n\n}\n","<div class=\"login-background\">\n\n  <form class=\"login-form noselect\" name=\"form\" (submit) = \"login()\" [formGroup]=\"loginForm\">\n\n      <div class=\"login-form-logo\">\n        <img src=\"./../assets/images/logo.png\" class=\"login-form-logo-img\">\n      </div>\n\n      <div class=\"login-form-input-box login-form-margin\">\n        <div class=\"login-form-input-icon-div\">\n          <mat-icon class=\"login-form-input-icon-email\">email</mat-icon>\n        </div>\n        <input class=\"login-form-input default-input\" name=\"email\" placeholder=\"Email ID\"\n        formControlName=\"email\" (input) = \"failMessage = ''\">\n\n        <mat-icon class=\"login-form-warning-icon\" matTooltip=\"Invalid E-mail\"\n        *ngIf=\"!this.loginForm.controls.email.untouched && this.loginForm.controls.email.errors\">warning</mat-icon>\n\n      </div>\n\n      <div class=\"login-form-input-box\">\n        <div class=\"login-form-input-icon-div\">\n          <mat-icon class=\"login-form-input-icon-lock\">lock</mat-icon>\n        </div>\n        <input class=\"login-form-input\" name=\"password\" id=\"password\" type=\"password\" #password\n         placeholder=\"Password\" formControlName=\"password\" (input) = \"failMessage = ''\">\n        <mat-icon class=\"login-form-warning-icon\" matTooltip=\"Password must be more than 8 characters long\"\n         *ngIf=\"!this.loginForm.controls.password.untouched && this.loginForm.controls.password.errors\">warning</mat-icon>\n      </div>\n\n      <div class=\"login-form-error\">\n        <a>{{failMessage}}</a>\n      </div>\n\n      <div >\n        <a routerLink=\"/register\" >Don't have an account? Sign Up</a>\n      </div>\n\n      <div class=\"login-form-margin\">\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"loginForm.invalid\" >Login</button>\n        <!-- <button mat-raised-button color=\"primary\" type=\"submit\"  >Login</button> -->\n\n      </div>\n\n  </form>\n\n</div>\n","export class UserSavedDetails {\n  constructor(email, username) {\n    this.email = email;\n    this.userName = username;\n  }\n  email: string;\n  userName: string;\n}\n","export class User {\n\n  constructor(email, password) {\n    this.email = email;\n    this.password = password;\n  }\n\n  email: string;\n  password: string;\n}\n","import { Router } from '@angular/router';\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  public registrationForm: FormGroup;\n  constructor(private formBuilder: FormBuilder,\n              private authService: AuthService,\n              private router: Router,\n              config: NgbTooltipConfig,\n              private snackBar: MatSnackBar)\n               {\n                config.placement = 'right';\n                config.triggers = 'hover';\n               }\n\n  register() {\n    // console.log(this.registrationForm);\n    if (this.registrationForm.valid) {\n      this.authService.newUser(this.registrationForm.value.email, this.registrationForm.value.password);\n      this.snackBar.open('User successfully created', 'DISMISS', {\n        duration: 5000,\n      });\n      this.router.navigate(['/']).catch(() => console.log('An error occured'));\n    }\n  }\n\n  checkPassword(input1, input2) {\n    /* if ( this.loginForm.value[x] !== this.loginForm.value[y]) {\n      return this.loginForm.controls.password.setErrors({notEquivalent: true});\n    }\n    else {\n      return this.loginForm.controls.password.setErrors(null);\n    } */\n\n    return (formGroup: FormGroup) => {\n      const key1 = formGroup.controls[input1];\n      const key2 = formGroup.controls[input2];\n\n      if (key2.errors && !key2.errors.notequivalent) {\n        return;\n      }\n\n      if ( key1.value !== key2.value ) {\n        key2.setErrors({notEquivalent: true});\n      }\n      else {\n        key2.setErrors(null);\n      }\n\n    };\n  }\n\n  passwordStrongValidation(control: FormGroup) {\n    const hasNumber = /\\d/.test(control.value);\n    const hasUpper = /[A-Z]/.test(control.value);\n    const hasLower = /[a-z]/.test(control.value);\n    const hasSpecial = /[!@#$%^&*]/.test(control.value);\n    // console.log('Num, Upp, Low', hasNumber, hasUpper, hasLower);\n    // const valid = hasNumber && hasUpper && hasLower;\n    const valid = true;\n    const returnObject = {noNumber: !hasNumber, noUpper: !hasUpper, noLower: !hasLower, noSpecial: !hasSpecial};\n\n    if (hasNumber && hasUpper && hasLower && hasSpecial) {\n      return null;\n    }\n    else {\n      return returnObject;\n    }\n  }\n\n  ngOnInit() {\n    this.registrationForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(9), this.passwordStrongValidation]],\n      password2: ['', [Validators.required, Validators.minLength(9)]]},\n      { validator: this.checkPassword('password', 'password2') }\n    );\n  }\n\n}\n","<div class=\"login-background\">\n\n  <form class=\"login-form noselect\" name=\"form\" (submit) = \"register()\" [formGroup]=\"registrationForm\">\n\n      <div class=\"login-form-logo\">\n        <img src=\"./../assets/images/logo.png\" class=\"login-form-logo-img\">\n      </div>\n\n      <!-- <div>\n        <a class=\"login-form-text\">Sign Up</a>\n      </div> -->\n\n\n      <div class=\"login-form-input-box login-form-margin\">\n        <div class=\"login-form-input-icon-div\">\n          <mat-icon class=\"login-form-input-icon-email\">email</mat-icon>\n        </div>\n        <input class=\"login-form-input default-input\" placeholder=\"Enter your email ID\" formControlName=\"email\">\n        <mat-icon class=\"login-form-warning-icon\" matTooltip=\"Invalid Email ID\"\n        *ngIf=\"!this.registrationForm.controls.email.untouched && this.registrationForm.controls.email.errors\">warning</mat-icon>\n\n      </div>\n\n\n\n      <div class=\"login-form-input-box\">\n        <div class=\"login-form-input-icon-div\">\n          <mat-icon class=\"login-form-input-icon-lock\">lock</mat-icon>\n        </div>\n        <input class=\"login-form-input\" placeholder=\"Choose a password\" type=\"password\" formControlName=\"password\">\n        <mat-icon class=\"login-form-warning-icon\" [ngClass]=\"{'warning-icon-black': this.registrationForm.controls.password.untouched || !this.registrationForm.controls.password.errors}\"\n        [ngbTooltip] = \"passwordTip\">info</mat-icon>\n      </div>\n\n      <div class=\"login-form-input-box login-form-margin\">\n        <div class=\"login-form-input-icon-div\">\n          <mat-icon class=\"login-form-input-icon-lock\">lock</mat-icon>\n        </div>\n        <input class=\"login-form-input\" placeholder=\"Confirm password\" type=\"password\" formControlName=\"password2\">\n        <mat-icon class=\"login-form-warning-icon\" matTooltip=\"Passwords do not match\"\n        *ngIf=\"!this.registrationForm.controls.password2.untouched && this.registrationForm.value.password !== this.registrationForm.value.password2\">warning</mat-icon>\n      </div>\n\n      <div>\n        <button mat-button color=\"primary\" routerLink='' type=\"reset\">Cancel</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"registrationForm.invalid\" >Register</button>\n        <!-- <button mat-raised-button color=\"primary\" type=\"submit\"  >Register</button> -->\n      </div>\n\n  </form>\n\n  <ng-template #passwordTip style=\"text-align: left;\">\n      <p class=\"login-form-tooltip-text\">\n        <mat-icon *ngIf=\"this.registrationForm.value.password.length >= 9\" class=\"login-form-tooltip-icon color-green\">check</mat-icon>\n        <mat-icon *ngIf=\"this.registrationForm.value.password.length < 9\" class=\"login-form-tooltip-icon color-red\">close</mat-icon>\n          More than 8 characters\n      </p>\n\n      <p class=\"login-form-tooltip-text\">\n        <mat-icon *ngIf=\"!(this.registrationForm.controls.password.errors && this.registrationForm.controls.password.errors.noLower)\" class=\"login-form-tooltip-icon color-green\">check</mat-icon>\n        <mat-icon *ngIf=\"this.registrationForm.controls.password.errors && this.registrationForm.controls.password.errors.noLower\" class=\"login-form-tooltip-icon color-red\">close</mat-icon>\n          1 Lower Case [a-z]\n      </p>\n\n      <p class=\"login-form-tooltip-text\">\n        <mat-icon *ngIf=\"!(this.registrationForm.controls.password.errors && this.registrationForm.controls.password.errors.noUpper)\" class=\"login-form-tooltip-icon color-green\">check</mat-icon>\n        <mat-icon *ngIf=\"this.registrationForm.controls.password.errors && this.registrationForm.controls.password.errors.noUpper\" class=\"login-form-tooltip-icon color-red\">close</mat-icon>\n          1 Upper Case [A-Z]\n      </p>\n\n      <p class=\"login-form-tooltip-text\">\n        <mat-icon *ngIf=\"!(this.registrationForm.controls.password.errors && this.registrationForm.controls.password.errors.noNumber)\" class=\"login-form-tooltip-icon color-green\">check</mat-icon>\n        <mat-icon *ngIf=\"this.registrationForm.controls.password.errors && this.registrationForm.controls.password.errors.noNumber\" class=\"login-form-tooltip-icon color-red\">close</mat-icon>\n          1 Number [0-9]\n      </p>\n\n      <p class=\"login-form-tooltip-text\">\n        <mat-icon *ngIf=\"!(this.registrationForm.controls.password.errors && this.registrationForm.controls.password.errors.noSpecial)\" class=\"login-form-tooltip-icon color-green\">check</mat-icon>\n        <mat-icon *ngIf=\"this.registrationForm.controls.password.errors && this.registrationForm.controls.password.errors.noSpecial\" class=\"login-form-tooltip-icon color-red\">close</mat-icon>\n          1 Special [!@#$%^&*]\n      </p>\n  </ng-template>\n\n</div>\n","import { UserSavedDetails } from './../models/user-saved-details';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthProviderService implements CanActivate {\n\nconstructor(private router: Router) { }\n\ncanActivate (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n  console.log(JSON.parse(localStorage.getItem('currentUser')));\n  const user: UserSavedDetails = JSON.parse(localStorage.getItem('currentUser'));\n\n  if (user) {\n    return true;\n  }\n\n  this.router.navigate(['/'], {queryParams: {returnUrl: state.url}}).catch(() => console.log('An Error occured while navigating to the page.'));\n  return false;\n}\n\n}\n","import { User } from './../models/user';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  public savedUsersArray = [];\n\nconstructor(private snackBar: MatSnackBar) {\n  if (localStorage.getItem('savedUsers') === null) {\n    localStorage.setItem('savedUsers', JSON.stringify([]));\n  }\n  else {\n    this.savedUsersArray = JSON.parse(localStorage.getItem('savedUsers'));\n  }\n }\n\n newUser(email, password) {\n   const newUser: User = new User(email, password);\n   this.savedUsersArray.push(newUser);\n   console.log(this.savedUsersArray);\n   localStorage.setItem('savedUsers', JSON.stringify(this.savedUsersArray));\n }\n\n validateUser(email, password) {\n  //  console.log(this.savedUsersArray);\n   const newUser: User = new User(email, password);\n   if (this.savedUsersArray.filter((user) => {\n\n     if (user.email === newUser.email && user.password === newUser.password) {\n      return true;\n     }\n  }).length > 0 ) {\n    return true;\n  }\n  else {\n    return false;\n  }\n }\n\n logoutUser() {\n   localStorage.removeItem('currentUser');\n   this.snackBar.open('User has been logged out', 'DISMISS', {\n    duration: 3000,\n  });\n }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}